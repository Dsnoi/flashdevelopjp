<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CATEGORY_ALIGN_ASSIGMENTS" xml:space="preserve">
    <value>コード整列</value>
  </data>
  <data name="CATEGORY_ALWAYS_COMPILE" xml:space="preserve">
    <value>Always Compile</value>
  </data>
  <data name="CATEGORY_CALCULATE" xml:space="preserve">
    <value>計算</value>
  </data>
  <data name="CATEGORY_FOLDING" xml:space="preserve">
    <value>折りたたみ</value>
  </data>
  <data name="CATEGORY_MOVE_LINE" xml:space="preserve">
    <value>行移動</value>
  </data>
  <data name="CATEGORY_MOVE_WORD" xml:space="preserve">
    <value>ワード移動</value>
  </data>
  <data name="CATEGORY_SEARCH" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="DESCRIPTION_ALIGN_ASSIGNMENTS" xml:space="preserve">
    <value>コード整列のショートカットの設定。</value>
  </data>
  <data name="DESCRIPTION_ALWAYS_COMPILE" xml:space="preserve">
    <value>Always Compile を現在のドキュメントに設定するショートカット</value>
  </data>
  <data name="DESCRIPTION_ALWAYS_COMP_AFTER_COMP" xml:space="preserve">
    <value>切り替えた後コンパイルする。</value>
  </data>
  <data name="DESCRIPTION_CALC_SELECTION" xml:space="preserve">
    <value>選択範囲を計算のショートカットの設定。</value>
  </data>
  <data name="DESCRIPTION_EXPAND_ALL_COMMENTS" xml:space="preserve">
    <value>すべての複数コメント行を展開する。</value>
  </data>
  <data name="DESCRIPTION_FOLD_ALL_COMMENTS" xml:space="preserve">
    <value>すべての複数コメント行を折りたたむ。</value>
  </data>
  <data name="DESCRIPTION_HIDE_MENU" xml:space="preserve">
    <value>"カスタム"メニューを非表示にします。</value>
  </data>
  <data name="DESCRIPTION_MOVE_LINE_DOWN" xml:space="preserve">
    <value>下に行を移動する。</value>
  </data>
  <data name="DESCRIPTION_MOVE_LINE_UP" xml:space="preserve">
    <value>上に行を移動する。</value>
  </data>
  <data name="DESCRIPTION_NEXT_WORD" xml:space="preserve">
    <value>次のワードに移動するショートカットの設定。</value>
  </data>
  <data name="DESCRIPTION_PREV_WORD" xml:space="preserve">
    <value>前のワードに移動するショートカットの設定。</value>
  </data>
  <data name="DESCRIPTION_SEARCH_NEXT" xml:space="preserve">
    <value>次を識別子検索するショートカットの設定。</value>
  </data>
  <data name="DESCRIPTION_SEARCH_PREV" xml:space="preserve">
    <value>前を識別子検索するショートカットの設定。</value>
  </data>
  <data name="DESCRIPTION_TOGGLE_FOLD_EXPAND" xml:space="preserve">
    <value>コメントの折りたたみ/展開をトグルさせるようにする。</value>
  </data>
  <data name="DESCRIPTION_WORD_SELECT" xml:space="preserve">
    <value>移動した際にワードをセレクトする設定。</value>
  </data>
  <data name="INFO_DESCRIPTION" xml:space="preserve">
    <value>FlashDevelop.jpプラグイン</value>
  </data>
  <data name="INFO_NOT_FOUND" xml:space="preserve">
    <value>{$0} は見つかりませんでした</value>
  </data>
  <data name="LABEL_ALIGN_ASSIGNMENT" xml:space="preserve">
    <value>コードの整列(&amp;L)</value>
  </data>
  <data name="LABEL_ALWAYS_COMPILE" xml:space="preserve">
    <value>Always Compileに設定(&amp;A)</value>
  </data>
  <data name="LABEL_CALC_SELECTION" xml:space="preserve">
    <value>選択範囲を計算</value>
  </data>
  <data name="LABEL_EXPAND_ALL_COMMENTS" xml:space="preserve">
    <value>ブロックコメントをすべて展開(&amp;E)</value>
  </data>
  <data name="LABEL_FOLD_ALL_COMMENTS" xml:space="preserve">
    <value>ブロックコメントをすべて折りたたむ(&amp;F)</value>
  </data>
  <data name="LABEL_MENU" xml:space="preserve">
    <value>カスタム(&amp;D)</value>
  </data>
  <data name="LABEL_NEXT_LINE" xml:space="preserve">
    <value>次の行へ(&amp;N)</value>
  </data>
  <data name="LABEL_NEXT_WORD" xml:space="preserve">
    <value>次のワードへ(&amp;S)</value>
  </data>
  <data name="LABEL_PREV_LINE" xml:space="preserve">
    <value>前の行へ(&amp;P)</value>
  </data>
  <data name="LABEL_PREV_WORD" xml:space="preserve">
    <value>前のワードへ(&amp;D)</value>
  </data>
  <data name="LABEL_SEARCH_NEXT" xml:space="preserve">
    <value>次を識別子検索(&amp;K)</value>
  </data>
  <data name="LABEL_SEARCH_PREV" xml:space="preserve">
    <value>前を識別子検索(&amp;J)</value>
  </data>
  <data name="MESSAGE_NOT_FOUND" xml:space="preserve">
    <value>次の指定された識別子は見つかりませんでした: </value>
  </data>
  <data name="NAME_CALC_SELECTION" xml:space="preserve">
    <value>選択範囲を計算</value>
  </data>
  <data name="NAME_NEXT_WORD" xml:space="preserve">
    <value>次のワードへ</value>
  </data>
  <data name="NAME_PREV_WORD" xml:space="preserve">
    <value>前のワードへ</value>
  </data>
  <data name="NAME_SEARCH_NEXT" xml:space="preserve">
    <value>次を識別子検索</value>
  </data>
  <data name="NAME_SEARCH_PREV" xml:space="preserve">
    <value>前を識別子検索</value>
  </data>
  <data name="TITLE_NOT_FOUND" xml:space="preserve">
    <value>見つかりませんでした</value>
  </data>
</root>